{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-7e2c9fe22896135b.js","src/scripts/main.js","src/modules/Game.class.js","node_modules/hammerjs/hammer.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"5a1bda1ab8fca702\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/* eslint-disable no-console */\n'use strict';\nimport Hammer from 'hammerjs';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst table = document.querySelector('tbody');\nlet boardState = game.getState();\nconst gameScoreText = document.querySelector('.game-score');\nconst gameScoreRecordText = document.querySelector('.record');\nlet gameScore = 0;\nlet highScore = parseInt(localStorage.getItem('highScore')) || 0;\n\ngameScoreRecordText.textContent = highScore;\nconsole.log(game.getStatus());\n\nconst displayText = () => {\n  gameScore = 0;\n\n  Array.from(table.rows).forEach((row) => {\n    Array.from(row.cells).forEach((cell) => {\n      const cellValue = parseFloat(cell.textContent) || 0;\n\n      gameScore += cellValue;\n    });\n  });\n\n  gameScoreText.textContent = `${gameScore}`;\n\n  if (gameScore > highScore) {\n    highScore = gameScore;\n    localStorage.setItem('highScore', highScore);\n    gameScoreRecordText.textContent = highScore;\n  }\n};\n\nconst startGameBoard = () => {\n  const randomRow1 = Math.floor(Math.random() * boardState.length);\n  const randomCol1 = Math.floor(Math.random() * boardState[randomRow1].length);\n  const randomChance1 = Math.random();\n\n  const randomValue1 = randomChance1 < 0.1 ? 4 : 2;\n\n  let randomRow2, randomCol2, randomValue2;\n  let positionIsSame = true;\n\n  do {\n    randomRow2 = Math.floor(Math.random() * boardState.length);\n    randomCol2 = Math.floor(Math.random() * boardState[randomRow2].length);\n\n    const randomChance2 = Math.random();\n\n    randomValue2 = randomChance2 < 0.1 ? 4 : 2;\n\n    positionIsSame = randomRow1 === randomRow2 && randomCol1 === randomCol2;\n  } while (positionIsSame);\n\n  boardState[randomRow1][randomCol1] = randomValue1;\n  boardState[randomRow2][randomCol2] = randomValue2;\n};\n\nconst renderDom = (direction) => {\n  Array.from(table.rows).forEach((row) => {\n    Array.from(row.cells).forEach((cell) => {\n      cell.textContent = '';\n      cell.classList.remove(...cell.classList);\n      cell.classList.add('field-cell');\n    });\n  });\n\n  const movedCells = game.getMovedCells();\n\n  Array.from(table.rows).forEach((row, rowIndex) => {\n    Array.from(row.cells).forEach((cell, cellIndex) => {\n      const value = boardState[rowIndex][cellIndex];\n\n      if (value !== 0) {\n        cell.textContent = value;\n        cell.classList.add(`field-cell--${value}`);\n\n        const isMoved = movedCells.some(\n          (movedCell) =>\n            movedCell.row === rowIndex && movedCell.col === cellIndex,\n        );\n\n        if (isMoved && direction) {\n          cell.classList.add(`field-cell-moving-${direction}`);\n        }\n      }\n\n      setTimeout(() => {\n        if (direction) {\n          cell.classList.remove(`field-cell-moving-${direction}`);\n        }\n      }, 100);\n    });\n  });\n};\n\nconst startGame = () => {\n  startGameBoard();\n  renderDom();\n};\n\nconst buttonStart = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst restart = () => {\n  game.status = 'idle';\n  game.restart();\n  boardState = game.getState();\n  gameScore = 0;\n  gameScoreText.textContent = '0';\n\n  renderDom();\n\n  buttonStart.textContent = 'Start';\n  buttonStart.classList.remove('restart');\n  buttonStart.classList.add('start');\n};\n\nconst iWin = () => {\n  let isWin = false;\n\n  Array.from(table.rows).forEach((row, rowIndex) => {\n    Array.from(row.cells).forEach((cell, cellIndex) => {\n      const value = boardState[rowIndex][cellIndex];\n\n      if (value === 2048) {\n        isWin = true;\n      }\n    });\n  });\n\n  if (isWin) {\n    game.status = 'win';\n    messageWin.classList.remove('hidden');\n  }\n};\n\nconst handleMove = (direction) => {\n  let canMove = false;\n\n  if (direction === 'up' && game.canMoveUp()) {\n    game.moveUp();\n    canMove = true;\n  } else if (direction === 'down' && game.canMoveDown()) {\n    game.moveDown();\n    canMove = true;\n  } else if (direction === 'left' && game.canMoveLeft()) {\n    game.moveLeft();\n    canMove = true;\n  } else if (direction === 'right' && game.canMoveRight()) {\n    game.moveRight();\n    canMove = true;\n  }\n\n  if (canMove) {\n    renderDom(direction);\n    displayText();\n\n    if (\n      !game.canMoveUp() &&\n      !game.canMoveDown() &&\n      !game.canMoveLeft() &&\n      !game.canMoveRight() &&\n      game.getStatus() !== 'idle'\n    ) {\n      game.status = 'lose';\n      messageLose.classList.remove('hidden');\n    }\n    iWin();\n  }\n};\n\ndocument.addEventListener('click', (e) => {\n  if (e.target === buttonStart && game.getStatus() === 'idle') {\n    game.status = 'playing';\n    game.start();\n    startGame();\n    displayText();\n\n    buttonStart.textContent = 'Restart';\n    buttonStart.classList.remove('start');\n    buttonStart.classList.add('restart');\n    messageStart.classList.add('hidden');\n\n    document.addEventListener('keydown', (ev) => {\n      const keyDirection = {\n        ArrowUp: 'up',\n        ArrowDown: 'down',\n        ArrowLeft: 'left',\n        ArrowRight: 'right',\n      };\n\n      if (keyDirection[ev.key]) {\n        handleMove(keyDirection[ev.key]);\n      }\n    });\n  } else if (e.target === buttonStart && game.getStatus() !== 'idle') {\n    restart();\n    messageLose.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n  }\n});\n\nconst hammer = new Hammer(document.body);\n\nhammer.get('swipe').set({ direction: Hammer.DIRECTION_ALL });\n\nhammer.on('swipeleft', () => handleMove('left'));\nhammer.on('swiperight', () => handleMove('right'));\nhammer.on('swipeup', () => handleMove('up'));\nhammer.on('swipedown', () => handleMove('down'));\n","/* eslint-disable no-console */\n'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.board = JSON.parse(JSON.stringify(initialState));\n    this.previousBoard = JSON.parse(JSON.stringify(initialState));\n    this.status = 'idle';\n    this.score = 0;\n\n    // eslint-disable-next-line no-console\n  }\n\n  savePreviousState() {\n    this.previousBoard = JSON.parse(JSON.stringify(this.board));\n  }\n\n  getMovedCells() {\n    const movedCells = [];\n\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] !== this.previousBoard[row][col]) {\n          movedCells.push({ row, col });\n        }\n      }\n    }\n\n    return movedCells;\n  }\n\n  moveLeft() {\n    this.savePreviousState();\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] !== 0) {\n          currentRow.push(this.board[row][col]);\n        }\n      }\n\n      while (currentRow.length < this.board[row].length) {\n        currentRow.push(0);\n      }\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        this.board[row][col] = currentRow[col];\n      }\n\n      for (let col = 0; col < this.board[row].length - 1; col++) {\n        if (\n          this.board[row][col] === this.board[row][col + 1] &&\n          this.board[row][col] !== 0\n        ) {\n          this.board[row][col] *= 2;\n          this.board[row][col + 1] = 0;\n        }\n      }\n\n      const newRow = [];\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] !== 0) {\n          newRow.push(this.board[row][col]);\n        }\n      }\n\n      while (newRow.length < this.board[row].length) {\n        newRow.push(0);\n      }\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        this.board[row][col] = newRow[col];\n      }\n    }\n\n    this.updateTable();\n    this.getRandomCellNumber();\n    this.updateTable();\n  }\n\n  moveRight() {\n    this.savePreviousState();\n\n    for (let row = 0; row < this.board.length; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] !== 0) {\n          currentRow.push(this.board[row][col]);\n        }\n      }\n\n      while (currentRow.length < this.board[row].length) {\n        currentRow.unshift(0);\n      }\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        this.board[row][col] = currentRow[col];\n      }\n\n      for (let col = this.board[row].length - 1; col > 0; col--) {\n        if (\n          this.board[row][col] === this.board[row][col - 1] &&\n          this.board[row][col] !== 0\n        ) {\n          this.board[row][col] *= 2;\n          this.board[row][col - 1] = 0;\n        }\n      }\n\n      const newRow = [];\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] !== 0) {\n          newRow.push(this.board[row][col]);\n        }\n      }\n\n      while (newRow.length < this.board[row].length) {\n        newRow.unshift(0);\n      }\n\n      for (let col = 0; col < this.board[row].length; col++) {\n        this.board[row][col] = newRow[col];\n      }\n    }\n\n    this.updateTable();\n    this.getRandomCellNumber();\n    this.updateTable();\n  }\n\n  moveUp() {\n    this.savePreviousState();\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const column = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        if (this.board[row][col] !== 0) {\n          column.push(this.board[row][col]);\n        }\n      }\n\n      while (column.length < this.board.length) {\n        column.push(0);\n      }\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = column[row];\n      }\n\n      for (let row = 0; row < this.board.length - 1; row++) {\n        if (\n          this.board[row][col] === this.board[row + 1][col] &&\n          this.board[row][col] !== 0\n        ) {\n          this.board[row][col] *= 2;\n          this.board[row + 1][col] = 0;\n        }\n      }\n\n      const newColumn = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        if (this.board[row][col] !== 0) {\n          newColumn.push(this.board[row][col]);\n        }\n      }\n\n      while (newColumn.length < this.board.length) {\n        newColumn.push(0);\n      }\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n    }\n\n    this.updateTable();\n\n    this.getRandomCellNumber();\n    this.updateTable();\n  }\n  moveDown() {\n    this.savePreviousState();\n\n    for (let col = 0; col < this.board[0].length; col++) {\n      const column = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        if (this.board[row][col] !== 0) {\n          column.push(this.board[row][col]);\n        }\n      }\n\n      while (column.length < this.board.length) {\n        column.unshift(0);\n      }\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = column[row];\n      }\n\n      for (let row = this.board.length - 1; row > 0; row--) {\n        if (\n          this.board[row][col] === this.board[row - 1][col] &&\n          this.board[row][col] !== 0\n        ) {\n          this.board[row][col] *= 2;\n          this.board[row - 1][col] = 0;\n        }\n      }\n\n      const newColumn = [];\n\n      for (let row = 0; row < this.board.length; row++) {\n        if (this.board[row][col] !== 0) {\n          newColumn.push(this.board[row][col]);\n        }\n      }\n\n      while (newColumn.length < this.board.length) {\n        newColumn.unshift(0);\n      }\n\n      for (let row = 0; row < this.board.length; row++) {\n        this.board[row][col] = newColumn[row];\n      }\n    }\n\n    this.updateTable();\n    this.getRandomCellNumber();\n    this.updateTable();\n  }\n\n  getScore() {}\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n  }\n\n  updateTable() {\n    const table = document.querySelector('tbody');\n\n    Array.from(table.rows).forEach((row, rowIndex) => {\n      Array.from(row.cells).forEach((cell, cellIndex) => {\n        const value = this.board[rowIndex][cellIndex];\n\n        cell.textContent = value !== 0 ? value : '';\n      });\n    });\n  }\n\n  getRandomCellNumber() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { row: randomRow, col: randomCol } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      const randomChance = Math.random();\n\n      this.board[randomRow][randomCol] = randomChance < 0.1 ? 4 : 2;\n    }\n  }\n\n  canMoveUp() {\n    for (let row = 1; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (\n          this.board[row][col] !== 0 &&\n          (this.board[row - 1][col] === 0 ||\n            this.board[row - 1][col] === this.board[row][col])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canMoveDown() {\n    for (let row = 0; row < this.board.length - 1; row++) {\n      for (let col = 0; col < this.board[row].length; col++) {\n        if (\n          this.board[row][col] !== 0 &&\n          (this.board[row + 1][col] === 0 ||\n            this.board[row + 1][col] === this.board[row][col])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canMoveLeft() {\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 1; col < this.board[row].length; col++) {\n        if (\n          this.board[row][col] !== 0 &&\n          (this.board[row][col - 1] === 0 ||\n            this.board[row][col - 1] === this.board[row][col])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canMoveRight() {\n    for (let row = 0; row < this.board.length; row++) {\n      for (let col = 0; col < this.board[row].length - 1; col++) {\n        if (\n          this.board[row][col] !== 0 &&\n          (this.board[row][col + 1] === 0 ||\n            this.board[row][col + 1] === this.board[row][col])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.b8fca702.js.map","sourceRoot":"/__parcel_source_root/"}